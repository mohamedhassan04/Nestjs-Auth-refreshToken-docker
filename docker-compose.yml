version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    container_name: postgres-db
    image: postgres:latest # Use the latest PostgreSQL image
    ports:
      - 5432:5432 # Expose PostgreSQL port
    environment:
      - POSTGRES_USER=${POSTGRES_USER} # Set PostgreSQL username
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD} # Set PostgreSQL password
      - POSTGRES_DB=${POSTGRES_DB} # Set default PostgreSQL database
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data in a volume

  # Nest.js Backend Service
  nest-backend:
    container_name: nest-app
    image: nest-api # Use the Nest.js image
    # Wait for the database service to start
    depends_on:
      - db
    build:
      dockerfile: Dockerfile
      context: .
    # Pass PostgreSQL credentials to Nest.js app
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=db # Use the service name as the database host
    ports:
      - 5000:5000 # Expose Nest.js port
    volumes:
      - .:/app # Mount current directory
      - /app/node_modules # Persist node_modules
    restart: unless-stopped

  # PGAdmin Container for Database Administration
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4 # Use the PGAdmin image
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL} # Set PGAdmin default email
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD} # Set PGAdmin default password
    ports:
      - '5050:80'
    depends_on:
      - db # Wait for the database service to start

volumes:
  postgres_data: # Volume to persist PostgreSQL data
